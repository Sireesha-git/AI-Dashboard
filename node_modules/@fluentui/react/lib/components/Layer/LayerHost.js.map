{"version":3,"file":"LayerHost.js","sourceRoot":"../src/","sources":["components/Layer/LayerHost.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAC;AACtC,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAGzD,MAAM,CAAC,IAAM,SAAS,GAA6C,UAAA,KAAK;IAC9D,IAAA,EAAE,GAAgB,KAAK,GAArB,EAAE,SAAS,GAAK,KAAK,UAAV,CAAW;IAEhC,KAAK,CAAC,SAAS,CAAC;QACd,iBAAiB,CAAC,EAAG,CAAC,CAAC;QACvB,0FAA0F;IAC5F,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,UAAU,CAAC;QACT,iBAAiB,CAAC,EAAG,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,OAAO,wCAAS,KAAK,IAAE,SAAS,EAAE,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,IAAI,CAAC;AACvE,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { useUnmount } from '@fluentui/react-hooks';\nimport { css } from '../../Utilities';\nimport { notifyHostChanged } from './Layer.notification';\nimport type { ILayerHostProps } from './LayerHost.types';\n\nexport const LayerHost: React.FunctionComponent<ILayerHostProps> = props => {\n  const { id, className } = props;\n\n  React.useEffect(() => {\n    notifyHostChanged(id!);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n  }, []);\n\n  useUnmount(() => {\n    notifyHostChanged(id!);\n  });\n\n  return <div {...props} className={css('ms-LayerHost', className)} />;\n};\n"]}