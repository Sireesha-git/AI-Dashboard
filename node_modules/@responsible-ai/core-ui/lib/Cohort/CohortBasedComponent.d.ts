import React from "react";
import { DatasetCohort } from "../DatasetCohort";
import { IDataset } from "../Interfaces/IDataset";
import { IFilter, ICompositeFilter } from "../Interfaces/IFilter";
import { JointDataset } from "../util/JointDataset";
import { MetricCohortStats } from "./CohortStats";
import { CohortSource } from "./Constants";
import { ErrorCohort } from "./ErrorCohort";
export interface ICohortBasedComponentProps {
    dataset: IDataset;
}
export interface ICohortBasedComponentState {
    baseCohort: ErrorCohort;
    cohorts: ErrorCohort[];
    selectedCohort: ErrorCohort;
    jointDataset: JointDataset;
    baseDatasetCohort?: DatasetCohort;
    datasetCohorts?: DatasetCohort[];
    selectedDatasetCohort?: DatasetCohort;
}
export declare abstract class CohortBasedComponent<TProps extends ICohortBasedComponentProps, TState extends ICohortBasedComponentState> extends React.PureComponent<TProps, TState> {
    protected getSelectedCohort: () => ErrorCohort;
    protected updateSelectedCohort: (filters: IFilter[], compositeFilters: ICompositeFilter[], source: CohortSource | undefined, cells: number, cohortStats: MetricCohortStats | undefined) => void;
}
