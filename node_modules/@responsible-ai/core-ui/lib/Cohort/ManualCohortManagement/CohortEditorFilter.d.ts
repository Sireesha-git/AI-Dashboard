import { IComboBoxOption, IComboBox } from "@fluentui/react";
import { IColumnRange } from "@responsible-ai/mlchartlib";
import React from "react";
import { ModelAssessmentContext } from "../../Context/ModelAssessmentContext";
import { IFilter } from "../../Interfaces/IFilter";
export interface ICohortEditorFilterProps {
    featureNames: string[];
    columnRanges?: {
        [key: string]: IColumnRange;
    };
    openedFilter: IFilter;
    filterIndex?: number;
    filters: IFilter[];
    showInvalidMinMaxValueError: boolean;
    showInvalidValueError: boolean;
    setFilterMessage: (filtersMessage: string) => void;
    setSelectedProperty(ev: React.FormEvent<IComboBox>, item?: IComboBoxOption): void;
    setAsCategorical(ev?: React.FormEvent, checked?: boolean): void;
    setCategoricalValues(ev?: React.FormEvent<IComboBox>, item?: IComboBoxOption): void;
    setComparison(ev?: React.FormEvent<IComboBox>, item?: IComboBoxOption): void;
    setNumericValue(delta: number, index: number, stringVal: string, range?: IColumnRange): string | void;
    saveState(index?: number): void;
    cancelFilter(): void;
}
export declare class CohortEditorFilter extends React.Component<ICohortEditorFilterProps> {
    context: React.ContextType<typeof ModelAssessmentContext>;
    private readonly dataArray;
    render(): React.ReactNode;
    private onAddFilterClick;
}
