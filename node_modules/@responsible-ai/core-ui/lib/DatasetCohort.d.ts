import { IColumnRange } from "@responsible-ai/mlchartlib";
import { MetricCohortStats } from "./Cohort/CohortStats";
import { CohortSource } from "./Cohort/Constants";
import { IDataset } from "./Interfaces/IDataset";
import { ModelTypes } from "./Interfaces/IExplanationContext";
import { ICompositeFilter, IFilter } from "./Interfaces/IFilter";
export declare class DatasetCohort {
    name: string;
    dataset: IDataset;
    filters: IFilter[];
    compositeFilters: ICompositeFilter[];
    modelType?: ModelTypes | undefined;
    private columnRanges?;
    source: CohortSource;
    isTemporary: boolean;
    isAllDataCohort: boolean;
    selectedIndexes: number[];
    cohortStats: MetricCohortStats;
    constructor(name: string, dataset: IDataset, filters?: IFilter[], compositeFilters?: ICompositeFilter[], modelType?: ModelTypes | undefined, columnRanges?: {
        [key: string]: IColumnRange;
    } | undefined, source?: CohortSource, isTemporary?: boolean, cohortStats?: MetricCohortStats | undefined, isAllDataCohort?: boolean);
    private filterRecursively;
    private filterComposite;
    private applyFilters;
    private getDataDict;
    private filterRow;
    private includesValue;
    private updateStatsFromData;
}
