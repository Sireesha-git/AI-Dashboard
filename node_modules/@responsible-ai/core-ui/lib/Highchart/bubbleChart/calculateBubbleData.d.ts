import { Cohort } from "../../Cohort/Cohort";
import { IDataset } from "../../Interfaces/IDataset";
import { IHighchartBubbleSDKClusterData } from "../../Interfaces/IHighchartBubbleData";
import { IGenericChartProps } from "../../util/IGenericChartProps";
import { ITelemetryEvent } from "../../util/ITelemetryEvent";
import { JointDataset } from "../../util/JointDataset";
import { TelemetryEventName } from "../../util/TelemetryEventName";
import { IHighchartsConfig } from "../IHighchartsConfig";
import { IClusterData } from "./ChartUtils";
import { IScatterPoint } from "./getScatterOption";
export declare function calculateBubblePlotDataFromErrorCohort(errorCohort: Cohort, chartProps: IGenericChartProps, customPoints: Array<{
    [key: string]: any;
}>, jointDataset: JointDataset, dataset: IDataset, isScatterPlotDataLoading?: boolean, showColorAxis?: boolean, useDifferentColorForScatterPoints?: boolean, eventName?: TelemetryEventName, requestBubblePlotData?: (filter: unknown[], compositeFilter: unknown[], xAxis: string, yAxis: string, abortSignal: AbortSignal) => Promise<IHighchartBubbleSDKClusterData>, selectPointFromChartLargeData?: (data: IScatterPoint) => void, onBubbleClick?: (scatterPlotData: IHighchartsConfig, clusterData: IClusterData) => void, onIndexSeriesUpdated?: (indexSeries: number[]) => void, telemetryHook?: (message: ITelemetryEvent) => void): Promise<IHighchartsConfig | IHighchartBubbleSDKClusterData | undefined>;
export declare function calculateBubblePlotDataFromSDK(errorCohort: Cohort, jointDataset: JointDataset, requestBubblePlotData: (filter: unknown[], compositeFilter: unknown[], xAxis: string, yAxis: string, abortSignal: AbortSignal) => Promise<IHighchartBubbleSDKClusterData>, xAxis: string, yAxis: string): Promise<IHighchartBubbleSDKClusterData>;
export declare function instanceOfHighChart(object: any): object is IHighchartsConfig;
