import React from "react";
import { ModelAssessmentContext } from "../Context/ModelAssessmentContext";
import { IGenericChartProps } from "../util/IGenericChartProps";
import { ITelemetryEvent } from "../util/ITelemetryEvent";
interface IOverallMetricChartState {
    xDialogOpen: boolean;
    yDialogOpen: boolean;
    selectedCohortIndex: number;
    chartProps: IGenericChartProps | undefined;
}
interface IOverallMetricChartProps {
    telemetryHook?: (message: ITelemetryEvent) => void;
}
export declare class OverallMetricChart extends React.PureComponent<IOverallMetricChartProps, IOverallMetricChartState> {
    static contextType: React.Context<import("../Context/ModelAssessmentContext").IModelAssessmentContext>;
    context: React.ContextType<typeof ModelAssessmentContext>;
    private readonly chartAndConfigsId;
    constructor(props: IOverallMetricChartProps);
    componentDidMount(): void;
    render(): React.ReactNode;
    private setSelectedCohort;
    private readonly setXOpen;
    private readonly setXClose;
    private readonly setYOpen;
    private readonly setYClose;
    private onXSet;
    private onYSet;
}
export {};
