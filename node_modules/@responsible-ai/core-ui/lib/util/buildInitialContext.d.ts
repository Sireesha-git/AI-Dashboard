import { IPrecomputedExplanations, ITextFeatureImportance } from "../Interfaces/ExplanationInterfaces";
import { IDataset } from "../Interfaces/IDataset";
import { ModelTypes } from "../Interfaces/IExplanationContext";
import { IGlobalExplanationProps } from "../Interfaces/IGlobalExplanationProps";
import { Method } from "../Interfaces/IModelExplanationData";
export declare function buildGlobalProperties(precomputedExplanations?: IPrecomputedExplanations): IGlobalExplanationProps;
export declare function buildIndexedNames(length: number, baseString: string): string[];
export declare const getClassLength: (precomputedExplanations?: IPrecomputedExplanations, probabilityY?: number[][]) => number;
export declare const getClassLengthFromTextImportances: (textFeatureImportance?: ITextFeatureImportance[], probabilityY?: number[][]) => number;
export declare function getClassLengthFromProbabilityY(probabilityY?: number[][]): number;
export declare function getModelType(method?: Method, precomputedExplanations?: IPrecomputedExplanations, probabilityY?: number[][]): ModelTypes;
export declare function getModelTypeFromExplanation(precomputedExplanations?: IPrecomputedExplanations, probabilityY?: number[][]): ModelTypes;
export declare function ifEnableLargeData(dataset: IDataset): boolean;
export declare function getModelTypeFromTextExplanation(precomputedExplanations?: IPrecomputedExplanations, probabilityY?: number[][]): ModelTypes;
