import { ErrorCohort } from "../Cohort/ErrorCohort";
import { IBoxChartState } from "../Highchart/IBoxChartState";
import { IHighchartBoxData } from "../Interfaces/IHighchartBoxData";
export declare function calculateBoxPlotDataFromErrorCohort(errorCohort: ErrorCohort, index: number, key: string, queryClass?: string, requestBoxPlotDistribution?: (request: any, abortSignal: AbortSignal) => Promise<IHighchartBoxData>, ifEnableLargeData?: boolean): Promise<IHighchartBoxData | undefined>;
export declare function calculateBoxPlotDataFromSDK(errorCohort: ErrorCohort, requestBoxPlotDistribution: (request: any, abortSignal: AbortSignal) => Promise<IHighchartBoxData>, queryClass?: string): Promise<IHighchartBoxData>;
export declare function calculateBoxPlotData(data: number[], index?: number): IHighchartBoxData | undefined;
export declare function getPercentile(sortedData: number[], percentile: number): number | undefined;
export declare function setOutlierDataIfChanged(boxPlotData: Array<Promise<IHighchartBoxData | undefined>>, prevBoxChartState: IBoxChartState, onBoxPlotStateUpdate: (boxPlotState: IBoxChartState) => void): Promise<void>;
