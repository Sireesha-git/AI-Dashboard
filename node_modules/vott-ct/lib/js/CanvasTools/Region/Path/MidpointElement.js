"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MidpointElement = void 0;
const CubicBezierControl_1 = require("../../Core/CubicBezierControl");
const MidpointComponent_1 = require("../Component/MidpointComponent");
/**
 * `MidpointComponent` for the `PathRegion` class.
 */
class MidpointElement extends MidpointComponent_1.MidpointComponent {
    /**
     * Creates a new `DragElement`.
     * @param paper - The `Snap.Paper` object to draw on.
     * @param paperRect - The parent bounding box for created component.
     * @param regionData - The `RegionData` object shared across components. Used also for initial setup.
     * @param callbacks - The external callbacks collection.
     */
    constructor(paper, paperRect = null, regionData, callbacks) {
        super(paper, paperRect, regionData, callbacks);
    }
    /**
     * Add event listeners to a midpoint's DOM node
     */
    subscribeMidpointToEvents(midpoint, index) {
        const listeners = [
            {
                event: "click",
                base: midpoint.node,
                listener: (e) => {
                    e.stopPropagation();
                    this.createBezierControl(index);
                },
                bypass: false,
            },
        ];
        this.subscribeToEvents(listeners);
    }
    createBezierControl(index) {
        const rd = this.regionData.copy();
        const line = rd.getLineSegments()[index];
        rd.setBezierControl(index, new CubicBezierControl_1.CubicBezierControl({ c1: line.pointsAlongLine.oneThird, c2: line.pointsAlongLine.twoThird }));
        this.callbacks.onChange(this, rd);
    }
}
exports.MidpointElement = MidpointElement;
//# sourceMappingURL=MidpointElement.js.map